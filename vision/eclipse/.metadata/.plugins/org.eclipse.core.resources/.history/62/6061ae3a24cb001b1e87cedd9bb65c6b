
#include <stdio.h>
#include <string.h>

#include "alt_types.h"
#include "sys/alt_stdio.h"
#include "io.h"
#include "system.h"
#include "sys/alt_cache.h"
#include "altera_avalon_spi.h"
#include "altera_avalon_spi_regs.h"
#include "sys/alt_irq.h"

typedef struct {
  char rx_data[8],
       tx_data[8];
} TransData;

void __handle_handshake_irq(TransData* context) {
  int ret;
  memset(context->rx_data,0,8);

  ret = alt_avalon_spi_command(SPI_0_BASE, 0, 1, it, 0, spi_command_string_rx, 0);
  if(ret < 0) printf("ERROR SPI TX RET = %x \n" , ret);

  printf("Transmit done. RET = %x spi_rx =  %s\n",ret, context->rx_data);
}

int main() {
  printf("Hello from Nios II!\n");
  TransData msg;
  alt_ic_isr_register(HANDSHAKE_IRQ_INTERRUPT_CONTROLLER_ID,
                      HANDSHAKE_IRQ,
                      NULL,
                     &msg,
                      0);
loop: // Is this necessary - interrupt registered?
  goto loop;
}
