
#include <stdio.h>
#include <string.h>

#include "alt_types.h"
#include "sys/alt_stdio.h"
#include "io.h"
#include "system.h"
#include "sys/alt_cache.h"
#include "altera_avalon_spi.h"
#include "altera_avalon_spi_regs.h"
#include "sys/alt_irq.h"

typedef struct {
  char rx_data[8],
       tx_data[8];
} TransData;

int main() {
  printf("Hello from Nios II!\n");
  int return_code,ret;
  TransData msg;
  alt_ic_isr_register(HANDSHAKE_IRQ_INTERRUPT_CONTROLLER_ID,
                      HANDSHAKE_IRQ,
                      NULL,
                     &msg,
                      0);
loop:
  memset(spi_command_string_rx,0,10*sizeof(char));
  //This registers the Slave IRQ with NIOS
  return_code = alt_avalon_spi_command(SPI_0_BASE, 0, 1, it, 0, spi_command_string_rx, 0);
  if(return_code < 0) printf("ERROR SPI TX RET = %x \n" , return_code);
  printf("Transmit done. RET = %x spi_rx %s\n",return_code,spi_command_string_rx);
  //RX is done via interrupts.
  it++;
  if (*it) goto loop;
  it = spi_command_string_tx;
  goto loop;
}
