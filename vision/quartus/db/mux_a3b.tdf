--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_SIZE=2 LPM_WIDTH=36 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 17.1 cbx_lpm_mux 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN mux_a3b
( 
	data[71..0]	:	input;
	result[35..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[35..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data1008w[1..0]	: WIRE;
	w_data1020w[1..0]	: WIRE;
	w_data1032w[1..0]	: WIRE;
	w_data1044w[1..0]	: WIRE;
	w_data1056w[1..0]	: WIRE;
	w_data634w[1..0]	: WIRE;
	w_data648w[1..0]	: WIRE;
	w_data660w[1..0]	: WIRE;
	w_data672w[1..0]	: WIRE;
	w_data684w[1..0]	: WIRE;
	w_data696w[1..0]	: WIRE;
	w_data708w[1..0]	: WIRE;
	w_data720w[1..0]	: WIRE;
	w_data732w[1..0]	: WIRE;
	w_data744w[1..0]	: WIRE;
	w_data756w[1..0]	: WIRE;
	w_data768w[1..0]	: WIRE;
	w_data780w[1..0]	: WIRE;
	w_data792w[1..0]	: WIRE;
	w_data804w[1..0]	: WIRE;
	w_data816w[1..0]	: WIRE;
	w_data828w[1..0]	: WIRE;
	w_data840w[1..0]	: WIRE;
	w_data852w[1..0]	: WIRE;
	w_data864w[1..0]	: WIRE;
	w_data876w[1..0]	: WIRE;
	w_data888w[1..0]	: WIRE;
	w_data900w[1..0]	: WIRE;
	w_data912w[1..0]	: WIRE;
	w_data924w[1..0]	: WIRE;
	w_data936w[1..0]	: WIRE;
	w_data948w[1..0]	: WIRE;
	w_data960w[1..0]	: WIRE;
	w_data972w[1..0]	: WIRE;
	w_data984w[1..0]	: WIRE;
	w_data996w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data1056w[1..1]) # ((! sel_node[]) & w_data1056w[0..0])), ((sel_node[] & w_data1044w[1..1]) # ((! sel_node[]) & w_data1044w[0..0])), ((sel_node[] & w_data1032w[1..1]) # ((! sel_node[]) & w_data1032w[0..0])), ((sel_node[] & w_data1020w[1..1]) # ((! sel_node[]) & w_data1020w[0..0])), ((sel_node[] & w_data1008w[1..1]) # ((! sel_node[]) & w_data1008w[0..0])), ((sel_node[] & w_data996w[1..1]) # ((! sel_node[]) & w_data996w[0..0])), ((sel_node[] & w_data984w[1..1]) # ((! sel_node[]) & w_data984w[0..0])), ((sel_node[] & w_data972w[1..1]) # ((! sel_node[]) & w_data972w[0..0])), ((sel_node[] & w_data960w[1..1]) # ((! sel_node[]) & w_data960w[0..0])), ((sel_node[] & w_data948w[1..1]) # ((! sel_node[]) & w_data948w[0..0])), ((sel_node[] & w_data936w[1..1]) # ((! sel_node[]) & w_data936w[0..0])), ((sel_node[] & w_data924w[1..1]) # ((! sel_node[]) & w_data924w[0..0])), ((sel_node[] & w_data912w[1..1]) # ((! sel_node[]) & w_data912w[0..0])), ((sel_node[] & w_data900w[1..1]) # ((! sel_node[]) & w_data900w[0..0])), ((sel_node[] & w_data888w[1..1]) # ((! sel_node[]) & w_data888w[0..0])), ((sel_node[] & w_data876w[1..1]) # ((! sel_node[]) & w_data876w[0..0])), ((sel_node[] & w_data864w[1..1]) # ((! sel_node[]) & w_data864w[0..0])), ((sel_node[] & w_data852w[1..1]) # ((! sel_node[]) & w_data852w[0..0])), ((sel_node[] & w_data840w[1..1]) # ((! sel_node[]) & w_data840w[0..0])), ((sel_node[] & w_data828w[1..1]) # ((! sel_node[]) & w_data828w[0..0])), ((sel_node[] & w_data816w[1..1]) # ((! sel_node[]) & w_data816w[0..0])), ((sel_node[] & w_data804w[1..1]) # ((! sel_node[]) & w_data804w[0..0])), ((sel_node[] & w_data792w[1..1]) # ((! sel_node[]) & w_data792w[0..0])), ((sel_node[] & w_data780w[1..1]) # ((! sel_node[]) & w_data780w[0..0])), ((sel_node[] & w_data768w[1..1]) # ((! sel_node[]) & w_data768w[0..0])), ((sel_node[] & w_data756w[1..1]) # ((! sel_node[]) & w_data756w[0..0])), ((sel_node[] & w_data744w[1..1]) # ((! sel_node[]) & w_data744w[0..0])), ((sel_node[] & w_data732w[1..1]) # ((! sel_node[]) & w_data732w[0..0])), ((sel_node[] & w_data720w[1..1]) # ((! sel_node[]) & w_data720w[0..0])), ((sel_node[] & w_data708w[1..1]) # ((! sel_node[]) & w_data708w[0..0])), ((sel_node[] & w_data696w[1..1]) # ((! sel_node[]) & w_data696w[0..0])), ((sel_node[] & w_data684w[1..1]) # ((! sel_node[]) & w_data684w[0..0])), ((sel_node[] & w_data672w[1..1]) # ((! sel_node[]) & w_data672w[0..0])), ((sel_node[] & w_data660w[1..1]) # ((! sel_node[]) & w_data660w[0..0])), ((sel_node[] & w_data648w[1..1]) # ((! sel_node[]) & w_data648w[0..0])), ((sel_node[] & w_data634w[1..1]) # ((! sel_node[]) & w_data634w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data1008w[] = ( data[67..67], data[31..31]);
	w_data1020w[] = ( data[68..68], data[32..32]);
	w_data1032w[] = ( data[69..69], data[33..33]);
	w_data1044w[] = ( data[70..70], data[34..34]);
	w_data1056w[] = ( data[71..71], data[35..35]);
	w_data634w[] = ( data[36..36], data[0..0]);
	w_data648w[] = ( data[37..37], data[1..1]);
	w_data660w[] = ( data[38..38], data[2..2]);
	w_data672w[] = ( data[39..39], data[3..3]);
	w_data684w[] = ( data[40..40], data[4..4]);
	w_data696w[] = ( data[41..41], data[5..5]);
	w_data708w[] = ( data[42..42], data[6..6]);
	w_data720w[] = ( data[43..43], data[7..7]);
	w_data732w[] = ( data[44..44], data[8..8]);
	w_data744w[] = ( data[45..45], data[9..9]);
	w_data756w[] = ( data[46..46], data[10..10]);
	w_data768w[] = ( data[47..47], data[11..11]);
	w_data780w[] = ( data[48..48], data[12..12]);
	w_data792w[] = ( data[49..49], data[13..13]);
	w_data804w[] = ( data[50..50], data[14..14]);
	w_data816w[] = ( data[51..51], data[15..15]);
	w_data828w[] = ( data[52..52], data[16..16]);
	w_data840w[] = ( data[53..53], data[17..17]);
	w_data852w[] = ( data[54..54], data[18..18]);
	w_data864w[] = ( data[55..55], data[19..19]);
	w_data876w[] = ( data[56..56], data[20..20]);
	w_data888w[] = ( data[57..57], data[21..21]);
	w_data900w[] = ( data[58..58], data[22..22]);
	w_data912w[] = ( data[59..59], data[23..23]);
	w_data924w[] = ( data[60..60], data[24..24]);
	w_data936w[] = ( data[61..61], data[25..25]);
	w_data948w[] = ( data[62..62], data[26..26]);
	w_data960w[] = ( data[63..63], data[27..27]);
	w_data972w[] = ( data[64..64], data[28..28]);
	w_data984w[] = ( data[65..65], data[29..29]);
	w_data996w[] = ( data[66..66], data[30..30]);
END;
--VALID FILE
